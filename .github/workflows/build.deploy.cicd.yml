name: build.deploy.cicd

on:
  push:
    branches:
    - main
  workflow_dispatch:
   inputs:
    enableManualDeployement :
      description: 'Click to enable manual deployment'
      default: false
      required: true
      type: boolean

env:  
  DOTNET_VERSION: '8.0.*'
  docker-file-path: ./src/api/Dockerfile
  k8s-namespace: dev
  solution: ./api.sln
  manifests-files: |
    ./.github/kubernetes/apimanifest.yml
jobs:
  build:
    runs-on: ubuntu-latest
    environment: 'Test'
    steps:
    - uses: actions/checkout@v2

    - name: setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: build
      run: |
          dotnet restore $solution
          dotnet build $solution --configuration Release

    - name: az login
      uses: azure/login@v1
      with:
        creds: '{"clientId":"${{ secrets.clientId }}","clientSecret":"${{ secrets.clientSecret }}","subscriptionId":"${{ secrets.subscriptionId }}","tenantId":"eaf4a4cd-97f4-477a-8d21-50da33ef2a64"}'

    - name: Fetch secrets from KeyVault
      id: secrets
      uses: Azure/get-keyvault-secrets@v1
      with:
        keyvault: 'nucelotidz-dev'
        secrets: 'EmbedderKey,APIKey,GeminiKey,QdrantKey,nucleotidzdb,AzureBlobStorage'

    - name: Replace Tokens
      uses: cschleiden/replace-tokens@v1.3
      with:
        files: ./src/api/appsettings.json
      env:
        EmbedderKey: ${{ steps.secrets.outputs.EmbedderKey }}
        APIKey: ${{ steps.secrets.outputs.APIKey }} 
        GeminiKey: ${{ steps.secrets.outputs.GeminiKey }} 
        QdrantKey: ${{ steps.secrets.outputs.QdrantKey }} 
        nucleotidzdb: ${{ steps.secrets.outputs.nucleotidzdb }}
        AzureBlobStorage: ${{ steps.secrets.outputs.AzureBlobStorage }} 

    - name: Login container registry        
      uses: docker/login-action@v2.1.0
      with:
          registry: nucleotidz.azurecr.io
          username: nucleotidz
          password: ${{secrets.ACR_PASSWORD}}
    
    - name: Push to container registry
      run: |
        docker build -f ${{ env.docker-file-path }} . -t nucleotidz.azurecr.io/nucleotidz/api:${{github.sha}}
        docker push nucleotidz.azurecr.io/nucleotidz/api:${{github.sha}}
  deploy:
      name: deploy to k8
      runs-on: ubuntu-latest
      environment: 'Test'
      needs: build
      steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
  
      - name: Set Kubernetes context
        uses: azure/k8s-set-context@v4
        id: setcontext
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
  
      - name: Set Image Pull Secret
        uses: azure/k8s-create-secret@v4
        id: create-secret
        with:
          namespace: ${{ env.k8s-namespace }}
          container-registry-url: nucleotidz.azurecr.io
          container-registry-username: nucleotidz
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          secret-name: api-test
  
      - name: Deploy
        uses: Azure/k8s-deploy@v4.6
        with: 
          namespace: ${{ env.k8s-namespace }}
          manifests: |
             ${{ env.manifests-files }}
          images: |
            nucleotidz.azurecr.io/nucleotidz/api:${{github.sha}}
          imagepullsecrets: |
            api-test